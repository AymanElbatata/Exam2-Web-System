 @model IEnumerable<Exam.PL.Models.ExamTBLViewModel>

@{
    ViewData["Title"] = "Manage Exams";
}

<div class="p-5 text-center">
    <h2>Exam Management</h2>
</div>

<div class="container mt-4">
    <button id="addExamBtn" class="btn btn-primary mb-3">
        <i class="fas fa-plus"></i> Add New Exam
    </button>

    <table id="examsTable" class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                <th>Body</th>
                <th>Questions</th>
                <th>Success Rate</th>
                <th>Duration (min)</th>
                <th>Published</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var exam in Model)
            {
                <tr data-id="@exam.ID">
                    <td>@exam.Name</td>
                    <td>@(exam.Body?.Length > 50 ? exam.Body.Substring(0, 50) + "..." : exam.Body)</td>
                    <td>@exam.NumberofQuestions</td>
                    <td>@exam.SuccessRate%</td>
                    <td>@exam.DurationInMinutes</td>
                    <td>
                        @if (exam.IsPublished)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">No</span>
                        }
                    </td>
                    <td>
                        <a href="@Url.Action("ManageQuestions", "ManageExams", new { examId = exam.ID })"
                           class="btn btn-sm btn-info"
                           title="Manage Questions">
                            <i class="fas fa-question-circle"></i> Questions
                        </a>
                        <button class="btn btn-sm btn-warning edit-exam" data-id="@exam.ID">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-danger delete-exam" data-id="@exam.ID">
                            <i class="fas fa-trash"></i> Delete
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="examModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add New Exam</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="examForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="examId" name="ID" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="name" class="form-label">Name *</label>
                                <input type="text" class="form-control" id="name" name="Name" required>
                            </div>
                            <div class="mb-3">
                                <label for="numberOfQuestions" class="form-label">Number of Questions *</label>
                                <input type="number" class="form-control" id="numberOfQuestions" name="NumberofQuestions" min="1" required>
                            </div>
                            <div class="mb-3">
                                <label for="successRate" class="form-label">Success Rate (%) *</label>
                                <input type="number" class="form-control" id="successRate" name="SuccessRate" min="0" max="100" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="durationInMinutes" class="form-label">Duration (minutes) </label>
                                <input type="number" class="form-control" id="durationInMinutes" name="DurationInMinutes" min="1" required>
                            </div>
                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="isPublished" name="IsPublished" value="true">
                                <input type="hidden" name="IsPublished" value="false">
                                <label class="form-check-label" for="isPublished">Published</label>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="body" class="form-label">Description</label>
                        <textarea class="form-control" id="body" name="Body" rows="4"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Exam</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var examModal = new bootstrap.Modal(document.getElementById('examModal'));
            var isEditMode = false;

            // Add exam button click
            $('#addExamBtn').click(function() {
                isEditMode = false;
                $('#modalTitle').text('Add New Exam');
                $('#examForm')[0].reset();
                $('#examId').val('0');
                examModal.show();
            });

            $(document).on('click', '.edit-exam', function() {
                var examId = $(this).data('id');

                $.get('/ManageExams/GetExam/' + examId)
                    .done(function(exam) {
                        console.log("Exam data received:", exam); // Debugging

                        $('#modalTitle').text('Edit Exam');
                        $('#examId').val(exam.id);
                        $('#name').val(exam.name);
                        $('#body').val(exam.body);
                        $('#numberOfQuestions').val(exam.numberofQuestions);
                        $('#successRate').val(exam.successRate);
                        $('#durationInMinutes').val(exam.durationInMinutes);

                        // Fix checkbox handling
                        $('#isPublished').prop('checked', exam.isPublished === true);

                        examModal.show();
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                        toastr.error('Failed to load exam data');
                    });
            });

                $(document).on('click', '.edit-exam', function() {
            var examId = $(this).data('id');

            $.get('/ManageExams/GetExam/' + examId)
                .done(function(exam) {
                    console.log("Exam data received:", exam); // Debugging

                    $('#modalTitle').text('Edit Exam');
                    $('#examId').val(exam.id);
                    $('#name').val(exam.name);
                    $('#body').val(exam.body);
                    $('#numberOfQuestions').val(exam.numberofQuestions);
                    $('#successRate').val(exam.successRate);
                    $('#durationInMinutes').val(exam.durationInMinutes);

                    // Fix checkbox handling
                    $('#isPublished').prop('checked', exam.isPublished === true);

                    examModal.show();
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.error("AJAX Error:", textStatus, errorThrown);
                    toastr.error('Failed to load exam data');
                });
        });

            // Form submission
            $('#examForm').submit(function(e) {
                e.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: '/ManageExams/SaveExam',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            examModal.hide();
                            toastr.success('Exam saved successfully');
                            setTimeout(function() {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error('Error saving exam');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred');
                    }
                });
            });

            // Delete exam
            $(document).on('click', '.delete-exam', function() {
                var examId = $(this).data('id');

                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('/ManageExams/DeleteExam', { id: examId, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() }, function(response) {
                            if (response.success) {
                                toastr.success('Exam deleted successfully');
                                $(`tr[data-id="${examId}"]`).remove();
                            } else {
                                toastr.error('Error deleting exam');
                            }
                        });
                    }
                });
            });
        });
    </script>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- Before closing body -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>