 @model IEnumerable<Exam.PL.Models.AnswerTBLViewModel>

@{
    ViewData["Title"] = $"Manage Answers for: {ViewBag.QuestionTitle}";
    int questionId = ViewBag.QuestionId;
    string examName = ViewBag.ExamName;
    string examBody = ViewBag.ExamBody;
}

<div class="p-5 text-center">


<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <div class="d-flex justify-content-between mb-3">
        <button id="addAnswerBtn" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add Answer
        </button>
        <a href="@Url.Action("ManageQuestions", "ManageExams", new { examId = ViewBag.ExamId })"
           class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to Questions
        </a>
    </div>

    <table id="answersTable" class="table table-striped">
        <thead>
            <tr>
                <th>Answer Name</th>
                <th>Correct</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var answer in Model)
            {
                <tr data-id="@answer.ID">
                    <td>@answer.Name</td>
                    <td>
                        @if (answer.IsRight)
                        {
                            <span class="badge bg-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">No</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-sm btn-warning edit-answer" data-id="@answer.ID">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-danger delete-answer" data-id="@answer.ID">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
</div
<!-- Add/Edit Modal -->
<div class="modal fade" id="answerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add Answer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="answerForm">
                @Html.AntiForgeryToken()
                <input type="hidden" id="answerId" name="ID" />
                <input type="hidden" id="questionTBLId" name="QuestionTBLId" value="@questionId" />
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Name" class="form-label">Answer Text</label>
                        @* <textarea class="form-control" id="name" name="Name" rows="3" required></textarea> *@
                         <input type="text" class="form-control" id="answerName" name="Name" required>

                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="answerIsRight" name="IsRight" value="true">
                        <input type="hidden" name="IsRight" value="false">
                        <label class="form-check-label" for="answerIsRight">Correct Answer</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var answerModal = new bootstrap.Modal(document.getElementById('answerModal'));

            // Add Answer
            $('#addAnswerBtn').click(function() {
                $('#modalTitle').text('Add Answer');
                $('#answerForm')[0].reset();
                $('#answerId').val('0');
                $('#answerIsRight').prop('checked', false);

                answerModal.show();
            });

            // Edit Answer
            $(document).on('click', '.edit-answer', function() {
                var answerId = $(this).data('id');
    
                $.get('/ManageExams/GetAnswer/' + answerId)
                    .done(function(answer) {
                        alert("answer.name" +"|" + answer.isRight);
                        $('#modalTitle').text('Edit Answer');
                        $('#answerId').val(answer.id);
                        $('#answerName').val(answer.name);
                        $('#answerIsRight').prop('checked', !!answer.isRight);
                        $('#questionTBLId').val(answer.questionTBLId);
            
                        answerModal.show();
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                        toastr.error('Failed to load answer data');
                    });
            });




            // Save Answer
            $('#answerForm').submit(function(e) {
                e.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: '/ManageExams/SaveAnswer',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            answerModal.hide();
                            location.reload();
                        } else {
                            if (response.error) {
                                toastr.error(response.error);
                            }
                        }
                    },
                    error: function(xhr) {
                        toastr.error('Error saving answer');
                        console.error(xhr.responseText);
                    }
                });
            });

            // Delete Answer
            $(document).on('click', '.delete-answer', function() {
                if (!confirm('Are you sure you want to delete this answer?')) return;

                var answerId = $(this).data('id');

                $.post('/ManageExams/DeleteAnswer', {
                    id: answerId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        toastr.error('Error deleting answer');
                    }
                });
            });
        });
    </script>
}



<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<!-- Before closing body -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

